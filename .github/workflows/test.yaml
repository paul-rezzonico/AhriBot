name: Tests & Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Tests & Coverage
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '19'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run Tests
        run: ./gradlew test

      - name: Generate Kover Reports
        run: |
          ./gradlew koverXmlReport
          ./gradlew koverHtmlReport

      - name: Upload Kover HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html-report
          path: build/reports/kover/html/

      - name: Upload Kover XML Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml-report
          path: build/reports/kover/report.xml

      - name: Check Coverage Threshold
        run: ./gradlew koverVerify

  sonarqube:
    name: SonarQube Analysis
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '19'
          distribution: 'temurin'

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Analyze with SonarQube
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonar

#  spotless:
#    name: Code Style Check
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Set up JDK
#        uses: actions/setup-java@v4
#        with:
#          java-version: '19'
#          distribution: 'temurin'
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#
#      - name: Setup Gradle
#        uses: gradle/gradle-build-action@v3
#
#      - name: Check Code Style
#        run: ./gradlew spotlessCheck

#  detekt:
#    name: Static Code Analysis
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Set up JDK
#        uses: actions/setup-java@v4
#        with:
#          java-version: '19'
#          distribution: 'temurin'
#
#      - name: Run Detekt
#        run: ./gradlew detekt
#
#      - name: Upload Detekt Report
#        uses: actions/upload-artifact@v4
#        with:
#          name: detekt-report
#          path: build/reports/detekt/